# Database connection
spring.datasource.platform=mysql
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/customer_db}?createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:123456}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#glpat-6ychsePNPFr-nm6jsMNj

# JPA config
spring.jpa.database-platform=MYSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Swagger config
springdoc.swagger-ui.path=/swagger
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operations-sorter=alpha

# Application config
server.port=8081
spring.messages.basename=i18n/messages
logging.file.name=log/customer-service.log
spring.application.name=customer-service
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
url.bank.api=https://api.vietqr.io/v2/banks
firebase.image.base.url=https://firebasestorage.googleapis.com/v0/b/upload-file-2ac29.appspot.com/o/%s?alt=media

# Redis config
spring.cache.type=redis
spring.data.redis.port=6379
spring.data.redis.password=12345
spring.data.redis.host=${DOCKER_HOST:localhost}
spring.cache.redis.time-to-live=60000
spring.cache.redis.cache-null-values=true

# Zipkin config
spring.zipkin.sender.type=rabbit
spring.zipkin.baseUrl=http://${DOCKER_HOST:localhost}:9411
spring.sleuth.sampler.probability=1.0
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${DOCKER_HOST:localhost}:9411/api/v2/spans

# Vault config
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=0000
spring.cloud.vault.scheme=http
spring.cloud.vault.host=${DOCKER_HOST:localhost}
spring.cloud.vault.port=8200
spring.config.import=vault://

# Dubbo config
dubbo.application.name=customer-service
dubbo.protocol.name=dubbo
dubbo.protocol.port=20887
dubbo.registry.address=zookeeper://${DOCKER_HOST:localhost}:2181
dubbo.consumer.timeout=10000

#Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/klb
app.keycloak.admin.clientId=klb_app
app.keycloak.admin.clientSecret=5TwgRqJWj4mSeGD0hXXp3yn9n0SNyRgN
app.keycloak.realm=klb
app.keycloak.serverUrl=http://localhost:8180

#S3 Config
aws.s3.bucket-name=klb-bucket-k3
aws.s3.access-key=AKIA4HWJUFY2TY45VJ7B
aws.s3.secret-key=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
aws.s3.region=ap-southeast-2

core.banking.service.url=http://${CORE_SERVICE:localhost}:8090/api/v1

# RabbitMQ config
spring.rabbitmq.host=${DOCKER_HOST:localhost}
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USER:root}
spring.rabbitmq.password=${RABBITMQ_PASS:12345}
## RabbitMQ producer
rabbitmq.queue.customer.welcome=welcome_customer_queue
rabbitmq.queue.customer.update=update_customer_queue
rabbitmq.exchange.name=customer_exchange
rabbitmq.routing.key.welcome=welcome_customer_routing_key
rabbitmq.routing.key.update=update_customer_routing_key